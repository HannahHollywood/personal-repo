{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17700\viewh11700\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 [Step 1. Define the problem]\
\
1. Find the maximum number in the list\
2. Print out which position it is in the list\
\
*** Because there is an empty list, we need to return an empty tuple\
\
[Step 2. What tools do we need to work with?]\
Lists\
Tuples ()\
Loop (For)\
IF-THEN-ELSE\
Standardise the Data to Float() \'97> because some of the output are strings & floats\
\
[Step 3. Inputs, Output, Imports, Exports]\
Imports:\
- weather_data (List of numbers)\
\
Exports:\
- Largest number in the list and its position (in Tuple form)\
\
[Step 4. Pseudo Code]\
\
FUNCTION NAME: find_max\
IMPORTS: weather_data (List)\
EXPORTS: max_value (Tuple)\
\
DEPENDS ON:\
	\'97 the imported library (weather_data)\
\
CALLS:\
FUNCTIONS_NAME (variables we supply \'97> stuff we get out)\
\
\'97\'97\'97\'97\'97\'97\'97\
\
VARIABLES:\
\
current_index_position (int) << where we are currently in the index\
maximum_value (int) << make this None first, tells us we are on the first index\
maximum_index (int) << represents the index associated with the highest value\
current_value (int) << !!\
\
\'97\'97\'97\'97\'97\'97\'97\
\
ALGORITHM:\
\
	index_position = 0\
	maximum_value = None\
	maximum_index = None\
\
	IF the weather_data isn\'92t empty:\
		FOR current_value in weather data:\
\
			# turn current_value into a FLOAT\
			current_value = FLOAT(current_value)\
\
			IF the maximum_value is None then:\
			maximum_value = current_value\
\
		ELIF current_value GREATER THAN OR EQUAL TO maximum_value then:\
			maximum_value = current_value\
			maximum_index = index_position\
\
		index_position += 1 (increment by one to keep track of where we are in the list)\
\
		END FOR\
		max_value = (maximum_value, index_position)\
\
	ELSE:\
		max_value = ()\
\
	RETURN max_value\
}